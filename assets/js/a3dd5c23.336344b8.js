"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[7082],{4829:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"task-types/video-extract-audio","title":"Video / Extract Audio","description":"Workflow task type to extract the audio from a video.","source":"@site/docs/task-types/video-extract-audio.md","sourceDirName":"task-types","slug":"/task-types/video-extract-audio","permalink":"/docs/task-types/video-extract-audio","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Video / Extract Audio","slug":"video-extract-audio"},"sidebar":"documentationSidebar","previous":{"title":"OpenAI / Audio / Transcription","permalink":"/docs/task-types/openai-audio-transcription"},"next":{"title":"Youtube / Download","permalink":"/docs/task-types/youtube-download"}}');var o=n(4848),d=n(8453);const r={title:"Video / Extract Audio",slug:"video-extract-audio"},a="Extract Audio from Video",s={},c=[{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"extract-audio-from-video",children:"Extract Audio from Video"})}),"\n",(0,o.jsx)(t.p,{children:"Workflow task type to extract the audio from a video."}),"\n",(0,o.jsx)(t.h1,{id:"definition",children:"Definition"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'{\n  "specification": {\n    "type": "Video.ExtractAudio",\n    "category": "Video",\n    "description": "Extract the audio from a video",\n    "input": [\n      {\n        "name": "video",\n        "type": "file",\n        "required": true,\n        "description": "The video content to extract the audio from",\n        "example": "{file}"\n      }\n    ],\n    "output": [\n      {\n        "name": "audio",\n        "type": "file",\n        "default": true,\n        "description": "The extracted audio content.",\n        "example": "{file}"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,o.jsx)(t.h2,{id:"inputs",children:"Inputs"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"video"}),": The video content to extract the audio from."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"outputs",children:"Outputs"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"audio"}),": The extracted audio content."]}),"\n"]}),"\n",(0,o.jsx)(t.h1,{id:"example-usage",children:"Example Usage"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'{\n  "id": "extract_audio",\n  "type": "Video.ExtractAudio",\n  "input": {\n    "video": "{{workflow.input.video}}"\n  }\n}\n'})})]})}function l(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6540);const o={},d=i.createContext(o);function r(e){const t=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(d.Provider,{value:t},e.children)}}}]);