"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[8172],{735:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var o=t(5973),a=t(4848),s=t(8453);const i={slug:"workflow-to-summarize-webpage-content-via-api",title:"Summarize Webpage Content with an API call",authors:["kenanbek"],tags:["workflows","ai-integration","data-flow","etl-processes","app-integration","no-code-ai","ai-agents","integrations","use-cases"]},l=void 0,r={authorsImageUrls:[void 0]},c=[{value:"Workflow",id:"workflow",level:2},{value:"Workflow to Automate the Process",id:"workflow-to-automate-the-process",level:2},{value:"Create a Workflow",id:"create-a-workflow",level:2},{value:"Execute the Workflow",id:"execute-the-workflow",level:2},{value:"New Task Types",id:"new-task-types",level:2},{value:"Web Download Task",id:"web-download-task",level:3},{value:"Web Text Extraction",id:"web-text-extraction",level:3},{value:"OpenAI Completion",id:"openai-completion",level:3},{value:"Extend",id:"extend",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"In this blog post, we will create an automated workflow to download and summarize webpage content via DataFlow Platform's API. This tutorial demonstrates building and executing a workflow as a standalone automation process accessible via API or web interface."}),"\n",(0,a.jsx)(n.h2,{id:"workflow",children:"Workflow"}),"\n",(0,a.jsxs)(n.p,{children:["The main execution unit of the DataFlow Platform is a ",(0,a.jsx)(n.a,{href:"/docs/workflows",children:"workflow"}),". A workflow is a sequence of tasks that are executed in order."]}),"\n",(0,a.jsx)(n.p,{children:"For this workflow, we need to have the following automation steps:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Receive a webpage URL and summarization parameters as input"}),"\n",(0,a.jsx)(n.li,{children:"Download the webpage content by its URL"}),"\n",(0,a.jsx)(n.li,{children:"Extract the main text content from the HTML"}),"\n",(0,a.jsx)(n.li,{children:"Truncate and summarize the text based on given parameters"}),"\n",(0,a.jsx)(n.li,{children:"Return the summary as a response"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Unit of work in DataFlow Platform is a ",(0,a.jsx)(n.a,{href:"/docs/tasks",children:"task"}),". A task is a single unit of work that can be executed in a workflow. With the task types, we can implement the automation steps."]}),"\n",(0,a.jsx)(n.p,{children:"We need the following task types to implement this workflow:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/task-types/web-download",children:(0,a.jsx)(n.strong,{children:"Web Downloader"})}),": To download the webpage content (",(0,a.jsx)(n.code,{children:"web.download"}),")"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/task-types/web-extract-text",children:(0,a.jsx)(n.strong,{children:"Web Text Extractor"})}),": To extract main text from HTML (",(0,a.jsx)(n.code,{children:"web.extract_text"}),")"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/task-types/openai-completion",children:(0,a.jsx)(n.strong,{children:"OpenAI Completion"})}),": To summarize the text using GPT model (",(0,a.jsx)(n.code,{children:"openai.completion"}),")"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"To have this automation via the platform, we need first to create a workflow unit with all the tasks, and connect these tasks."}),"\n",(0,a.jsx)(n.h2,{id:"workflow-to-automate-the-process",children:"Workflow to Automate the Process"}),"\n",(0,a.jsx)(n.p,{children:"Here is the initial version of the workflow defined in JSON format:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "title": "Webpage Content Summarization Workflow using GPT AI model",\n  "description": "Downloads a webpage, extracts main content, summarizes it using OpenAI\'s GPT model, and returns the summary text.",\n  "inputs": [\n    {\n      "name": "webpage_url",\n      "type": "text",\n      "description": "The URL of the webpage to summarize."\n    },\n    {\n      "name": "summarize_instructions",\n      "type": "text",\n      "description": "The instructions for the summarization."\n    },\n    {\n      "name": "max_length",\n      "type": "number",\n      "description": "The maximum length of the summary text."\n    }\n  ],\n  "tasks": [\n    {\n      "name": "download_webpage",\n      "type": "web.download",\n      "inputs": {\n        "url": "{{inputs.webpage_url}}"\n      }\n    },\n    {\n      "name": "extract_text",\n      "type": "web.extract_text",\n      "inputs": {\n        "html": "{{tasks.download_webpage.outputs.html}}"\n      }\n    },\n    {\n      "name": "summarize_text",\n      "type": "openai.completion",\n      "inputs": {\n        "text": "{{tasks.extract_text.outputs.text}}",\n        "instructions": "{{inputs.summarize_instructions}}",\n        "max_tokens": "{{inputs.max_length}}"\n      }\n    }\n  ],\n  "outputs": [\n    {\n      "name": "summary_text",\n      "type": "text",\n      "value": "{{tasks.summarize_text.outputs.completion}}",\n      "description": "The summarized text of the webpage content."\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"create-a-workflow",children:"Create a Workflow"}),"\n",(0,a.jsx)(n.p,{children:"To create a workflow, you can use the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST \\\n  -H "Content-Type: application/json" \\\n  -d @workflow.json \\\n  https://api.dataflow.wiki/workflows\n'})}),"\n",(0,a.jsx)(n.p,{children:"If the workflow is created successfully, you will receive a response with the Workflow ID."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "workflow_id": "wf-5h8j9k0l"\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Save the Workflow ID, we will need it to execute the workflow."}),"\n",(0,a.jsx)(n.h2,{id:"execute-the-workflow",children:"Execute the Workflow"}),"\n",(0,a.jsxs)(n.p,{children:["To execute the workflow, you need to send a POST request to the ",(0,a.jsx)(n.code,{children:"/workflows/{{workflow-id}}/executions"})," endpoint with the input data for the workflow."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"API Request"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"POST /workflows/{{workflow-id}}/executions\n\nHeaders:\n- Content-Type: application/json\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Request Body"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "inputs": {\n    "webpage_url": "https://kenanbek.github.io/about/",\n    "summarize_instructions": "Include bullet points with highlights",\n    "max_length": 100\n  },\n  "monitoring": {\n    "webhook_url": "https://webhook.example.com/wf-5h8j9k0l"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"The CURL version of the request would look like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST \\\n  -H "Content-Type: application/json" \\\n  -d \'{"inputs": {"webpage_url": "https://kenanbek.github.io/about/", "summarize_instructions": "Include bullet points with highlights", "max_length": 100}, "monitoring": {"webhook_url": "https://webhook.example.com/wf-5h8j9k0l"}}\' \\\n  https://api.dataflow.wiki/workflows/{{workflow-id}}/executions\n'})}),"\n",(0,a.jsx)(n.h2,{id:"new-task-types",children:"New Task Types"}),"\n",(0,a.jsx)(n.p,{children:"This workflow introduces several new task types for web content processing:"}),"\n",(0,a.jsx)(n.h3,{id:"web-download-task",children:"Web Download Task"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"web.download"})," task type allows downloading webpage content from any URL. It handles various HTTP methods and headers, returning the raw HTML content."]}),"\n",(0,a.jsxs)(n.p,{children:["Learn more about the ",(0,a.jsx)(n.a,{href:"/docs/task-types/web-download",children:"Web Download"})," task type."]}),"\n",(0,a.jsx)(n.h3,{id:"web-text-extraction",children:"Web Text Extraction"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"web.extract_text"})," task processes HTML content to extract meaningful text, removing navigation elements, ads, and other non-content elements. It uses advanced algorithms to identify and extract the main content."]}),"\n",(0,a.jsxs)(n.p,{children:["Learn more about the ",(0,a.jsx)(n.a,{href:"/docs/task-types/web-extract-text",children:"Web Text Extraction"})," task type."]}),"\n",(0,a.jsx)(n.h3,{id:"openai-completion",children:"OpenAI Completion"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"openai.completion"})," task uses OpenAI's GPT model to generate summaries based on input text and instructions. It supports various parameters like max tokens, temperature, and specific prompting instructions."]}),"\n",(0,a.jsxs)(n.p,{children:["Learn more about the ",(0,a.jsx)(n.a,{href:"/docs/task-types/openai-completion",children:"OpenAI Completion"})," task type."]}),"\n",(0,a.jsx)(n.h2,{id:"extend",children:"Extend"}),"\n",(0,a.jsx)(n.p,{children:"Here are some ways to extend this workflow:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Add language translation capabilities"}),"\n",(0,a.jsx)(n.li,{children:"Implement different summarization strategies"}),"\n",(0,a.jsx)(n.li,{children:"Add support for multiple webpage URLs"}),"\n",(0,a.jsx)(n.li,{children:"Include metadata extraction"}),"\n",(0,a.jsx)(n.li,{children:"Add content classification"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["For detailed documentation and examples, visit our ",(0,a.jsx)(n.a,{href:"/docs",children:"Documentation Portal"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var o=t(6540);const a={},s=o.createContext(a);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(s.Provider,{value:n},e.children)}},5973:e=>{e.exports=JSON.parse('{"permalink":"/blog/workflow-to-summarize-webpage-content-via-api","source":"@site/blog/workflow-webpage-content-summarization-api/index.md","title":"Summarize Webpage Content with an API call","description":"In this blog post, we will create an automated workflow to download and summarize webpage content via DataFlow Platform\'s API. This tutorial demonstrates building and executing a workflow as a standalone automation process accessible via API or web interface.","date":"2025-02-05T21:25:46.000Z","tags":[{"inline":false,"label":"Workflows","permalink":"/blog/tags/workflows","description":"Articles about building, managing, and optimizing workflows"},{"inline":false,"label":"AI Integration","permalink":"/blog/tags/ai-integration","description":"Connecting artificial intelligence with your applications and workflows"},{"inline":false,"label":"Data Flow","permalink":"/blog/tags/data-flow","description":"Articles about the movement and transformation of data within a system or between systems."},{"inline":false,"label":"ETL Processes","permalink":"/blog/tags/etl-processes","description":"Posts related to Extract, Transform, Load processes"},{"inline":false,"label":"App Integration","permalink":"/blog/tags/app-integration","description":"Seamlessly connecting different applications to share data and automate tasks"},{"inline":false,"label":"No-Code AI","permalink":"/blog/tags/no-code-ai","description":"Building AI-powered solutions without writing code"},{"inline":false,"label":"AI Agents","permalink":"/blog/tags/ai-agents","description":"Creating and deploying autonomous AI agents for various tasks"},{"inline":false,"label":"Integrations","permalink":"/blog/tags/integrations","description":"Articles about building, managing, and optimizing integrations"},{"inline":false,"label":"Use Cases","permalink":"/blog/tags/use-cases","description":"Real-world examples of how the Data Flow Platform is used"}],"readingTime":3.52,"hasTruncateMarker":true,"authors":[{"name":"Kanan Rahimov","title":"AppBaza","url":"https://github.com/KenanBek","page":{"permalink":"/blog/authors/kenanbek"},"socials":{"github":"https://github.com/KenanBek","newsletter":"https://codervlogger.com","x":"https://x.com/KenanBekk"},"imageURL":"https://github.com/KenanBek.png","key":"kenanbek"}],"frontMatter":{"slug":"workflow-to-summarize-webpage-content-via-api","title":"Summarize Webpage Content with an API call","authors":["kenanbek"],"tags":["workflows","ai-integration","data-flow","etl-processes","app-integration","no-code-ai","ai-agents","integrations","use-cases"]},"unlisted":false,"nextItem":{"title":"Get YouTube Video Transcription with an API call","permalink":"/blog/workflow-to-download-and-transcribe-youtube-videos-via-api"}}')}}]);